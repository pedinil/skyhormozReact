{"ast":null,"code":"var _jsxFileName = \"D:\\\\skyhormozReact\\\\src\\\\components\\\\Page\\\\Gallary\\\\ImageGridList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { ImagetileData } from './ImagetileData';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 1000,\n      height: 1200,\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    titleBar: {\n      background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    },\n    icon: {\n      color: 'white'\n    }\n  };\n};\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     featured: true,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\n\n\nfunction AdvancedGridList(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 200,\n    spacing: 1,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, ImagetileData.map(function (tile) {\n    return React.createElement(GridListTile, {\n      key: tile.img,\n      cols: tile.featured ? 2 : 1,\n      rows: tile.featured ? 2 : 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.title,\n      titlePosition: \"top\",\n      actionIcon: React.createElement(IconButton, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(StarBorderIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })),\n      actionPosition: \"left\",\n      className: classes.titleBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  })));\n}\n\nAdvancedGridList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AdvancedGridList);","map":{"version":3,"sources":["D:\\skyhormozReact\\src\\components\\Page\\Gallary\\ImageGridList.js"],"names":["React","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","ImagetileData","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","transform","titleBar","icon","color","AdvancedGridList","props","classes","map","tile","img","featured","title","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,cAAc,EAAE,cAHZ;AAIJC,MAAAA,QAAQ,EAAE,QAJN;AAKJC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,KADiB;AAQvBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,IADC;AAERC,MAAAA,MAAM,EAAE,IAFA;AAGR;AACAC,MAAAA,SAAS,EAAE;AAJH,KARa;AAcvBC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,UAAU,EACR,oDACA;AAHM,KAda;AAmBvBO,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH;AAnBiB,GAAL;AAAA,CAApB;AAwBA;;;;;;;;;;;;;;;;;;;;AAkBA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,MACvBC,OADuB,GACXD,KADW,CACvBC,OADuB;AAG/B,SACE;AAAK,IAAA,SAAS,EAAEA,OAAO,CAAClB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE,GAAtB;AAA2B,IAAA,OAAO,EAAE,CAApC;AAAuC,IAAA,SAAS,EAAEkB,OAAO,CAACT,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,aAAa,CAACsB,GAAd,CAAkB,UAAAC,IAAI;AAAA,WACrB,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAA6B,MAAA,IAAI,EAAED,IAAI,CAACE,QAAL,GAAgB,CAAhB,GAAoB,CAAvD;AAA0D,MAAA,IAAI,EAAEF,IAAI,CAACE,QAAL,GAAgB,CAAhB,GAAoB,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEF,IAAI,CAACC,GAAf;AAAoB,MAAA,GAAG,EAAED,IAAI,CAACG,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAEH,IAAI,CAACG,KADd;AAEE,MAAA,aAAa,EAAC,KAFhB;AAGE,MAAA,UAAU,EACR,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEL,OAAO,CAACJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJJ;AAQE,MAAA,cAAc,EAAC,MARjB;AASE,MAAA,SAAS,EAAEI,OAAO,CAACL,QATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADqB;AAAA,GAAtB,CADH,CADF,CADF;AAsBD;;AAEDG,gBAAgB,CAACQ,SAAjB,GAA6B;AAC3BN,EAAAA,OAAO,EAAE5B,SAAS,CAACmC,MAAV,CAAiBC;AADC,CAA7B;AAIA,eAAenC,UAAU,CAACO,MAAD,CAAV,CAAmBkB,gBAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { ImagetileData } from './ImagetileData';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 1000,\r\n    height: 1200,\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  icon: {\r\n    color: 'white',\r\n  },\r\n});\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     featured: true,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nfunction AdvancedGridList(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\r\n        {ImagetileData.map(tile => (\r\n          <GridListTile key={tile.img} cols={tile.featured ? 2 : 1} rows={tile.featured ? 2 : 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              titlePosition=\"top\"\r\n              actionIcon={\r\n                <IconButton className={classes.icon}>\r\n                  <StarBorderIcon />\r\n                </IconButton>\r\n              }\r\n              actionPosition=\"left\"\r\n              className={classes.titleBar}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nAdvancedGridList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AdvancedGridList);\r\n"]},"metadata":{},"sourceType":"module"}